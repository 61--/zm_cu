
#define AD_IN_CUDA

#include "ad_inner/_cu_ad_inner.h"







void _cu_add_register_CF()
{
#define _CU_F1(n,sz) _cu_AdF1<n,sz>(0, 0, 0,0, 0,0, 0,0, 0,0);
#define _CU_F2(n,sz) _cu_AdF2<n,sz>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0);
#define _CU_F3(n,sz) _cu_AdF3<n, sz>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
#define _CU_F4(n,sz) _cu_AdF4<n, sz>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0);
#define _CU_F5(n,sz) _cu_AdF5<n, sz>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
#define _CU_F6(n,sz) _cu_AdF6<n, sz>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);



#ifdef _DEBUG
#define _CLAR_CU_F1(n) \
_CU_F1(n,300)\
_CU_F1(n,2000)

#define _CLAR_CU_F2(n) \
_CU_F2(n,300)\
_CU_F2(n,2000)

#define _CLAR_CU_F3(n) \
_CU_F3(n,300)\
_CU_F3(n,2000)

#define _CLAR_CU_F4(n) \
_CU_F4(n,300)\
_CU_F4(n,2000)

#define _CLAR_CU_F5(n) \
_CU_F5(n,300)\
_CU_F5(n,2000)

#define _CLAR_CU_F6(n) \
_CU_F6(n,300)\
_CU_F6(n,2000)


#else
#define _CLAR_CU_F1(n) \
_CU_F1(n,10)\
_CU_F1(n,20)\
_CU_F1(n,50)\
_CU_F1(n,100)\
_CU_F1(n,200)\
_CU_F1(n,300)\
_CU_F1(n,500)\
_CU_F1(n,800)\
_CU_F1(n,1000)\
_CU_F1(n,2000)\
_CU_F1(n,3000)


#define _CLAR_CU_F2(n) \
_CU_F2(n,10)\
_CU_F2(n,20)\
_CU_F2(n,50)\
_CU_F2(n,100)\
_CU_F2(n,200)\
_CU_F2(n,300)\
_CU_F2(n,500)\
_CU_F2(n,800)\
_CU_F2(n,1000)\
_CU_F2(n,2000)\
_CU_F2(n,3000)


#define _CLAR_CU_F3(n) \
_CU_F3(n,10)\
_CU_F3(n,20)\
_CU_F3(n,50)\
_CU_F3(n,100)\
_CU_F3(n,200)\
_CU_F3(n,300)\
_CU_F3(n,500)\
_CU_F3(n,800)\
_CU_F3(n,1000)\
_CU_F3(n,2000)\
_CU_F3(n,3000)

#define _CLAR_CU_F4(n) \
_CU_F4(n,10)\
_CU_F4(n,20)\
_CU_F4(n,50)\
_CU_F4(n,100)\
_CU_F4(n,200)\
_CU_F4(n,300)\
_CU_F4(n,500)\
_CU_F4(n,800)\
_CU_F4(n,1000)\
_CU_F4(n,2000)\
_CU_F4(n,3000)

#define _CLAR_CU_F5(n) \
_CU_F5(n,10)\
_CU_F5(n,20)\
_CU_F5(n,50)\
_CU_F5(n,100)\
_CU_F5(n,200)\
_CU_F5(n,300)\
_CU_F5(n,500)\
_CU_F5(n,800)\
_CU_F5(n,1000)\
_CU_F5(n,2000)\
_CU_F5(n,3000)


#define _CLAR_CU_F6(n) \
_CU_F6(n,10)\
_CU_F6(n,20)\
_CU_F6(n,50)\
_CU_F6(n,100)\
_CU_F6(n,200)\
_CU_F6(n,300)\
_CU_F6(n,500)\
_CU_F6(n,800)\
_CU_F6(n,1000)\
_CU_F6(n,2000)\
_CU_F6(n,3000)


#endif

#define _CLAR_CU_F(n) \
_CLAR_CU_F1(n)\
_CLAR_CU_F2(n)\
_CLAR_CU_F3(n)\
_CLAR_CU_F4(n)\
_CLAR_CU_F5(n)\
_CLAR_CU_F6(n)\
;


#define _CLAR_ALL(n) \
_CLAR_CU_F(0+10*n);\
	_CLAR_CU_F(1+10*n);\
	_CLAR_CU_F(2 + 10 *n);\
	_CLAR_CU_F(3 + 10*n);\
	_CLAR_CU_F(4+ 10*n);\
_CLAR_CU_F(5+ 10*n);\
_CLAR_CU_F(6+ 10*n);\
_CLAR_CU_F(7+ 10*n);\
_CLAR_CU_F(8+ 10*n);\
_CLAR_CU_F(9+ 10*n);\
;

/*
#define _CLAR_CU_F(n) \
	_cu_AdF1<n,10>(0, 0, 0,0, 0,0, 0,0, 0,0);\
	_cu_AdF1<n,20>(0, 0, 0,0, 0,0, 0,0, 0,0);\
	_cu_AdF1<n,50>(0, 0, 0,0, 0,0, 0,0, 0,0);\
	_cu_AdF1<n,100>(0, 0, 0,0, 0,0, 0,0, 0,0);\
	_cu_AdF1<n,200>(0, 0, 0,0, 0,0, 0,0, 0,0);\
	_cu_AdF1<n,300>(0, 0, 0,0, 0,0, 0,0, 0,0);\
	_cu_AdF1<n,500>(0, 0, 0,0, 0,0, 0,0, 0,0);\
	_cu_AdF1<n,800>(0, 0, 0,0, 0,0, 0,0, 0,0);\
	_cu_AdF1<n,1000>(0, 0, 0,0, 0,0, 0,0, 0,0);\
	_cu_AdF1<n,2000>(0, 0, 0,0, 0,0, 0,0, 0,0);\
	_cu_AdF1<n,3000>(0, 0, 0,0, 0,0, 0,0, 0,0);\
	_cu_AdF2<n, 10>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0); \
	_cu_AdF2<n, 20>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0);\
	_cu_AdF2<n, 50>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0); \
	_cu_AdF2<n, 100>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0);\
	_cu_AdF2<n, 200>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0); \
	_cu_AdF2<n, 300>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0);\
	_cu_AdF2<n, 500>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0); \
	_cu_AdF2<n, 800>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0);\
	_cu_AdF2<n, 1000>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0);\
	_cu_AdF2<n, 2000>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0);\
	_cu_AdF2<n, 3000>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0);\
	_cu_AdF3<n, 10>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0); \
	_cu_AdF3<n, 20>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0);\
	_cu_AdF3<n, 50>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0); \
	_cu_AdF3<n, 100>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0);\
	_cu_AdF3<n, 200>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0); \
	_cu_AdF3<n, 300>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0);\
	_cu_AdF3<n, 500>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0); \
	_cu_AdF3<n, 800>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0);\
	_cu_AdF3<n, 1000>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0); \
	_cu_AdF3<n, 2000>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0);\
	_cu_AdF3<n, 3000>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0);\
	;\
	_cu_AdF4<n, 10>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0); \
	_cu_AdF4<n, 20>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0);\
	_cu_AdF4<n, 50>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0); \
	_cu_AdF4<n, 100>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0);\
	_cu_AdF4<n, 200>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0); \
	_cu_AdF4<n, 300>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0);\
	_cu_AdF4<n, 500>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0); \
	_cu_AdF4<n, 800>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0);\
	_cu_AdF4<n, 1000>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0); \
	_cu_AdF4<n, 2000>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0);\
	_cu_AdF4<n, 3000>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0);\
	;
	*/

	//_CLAR_CU_F(0)
/*
	_CLAR_CU_F(1);
	_CLAR_CU_F(2);
	_CLAR_CU_F(3);
	_CLAR_CU_F(4);
	_CLAR_CU_F(5);
	*/

	_CLAR_ALL(0);
	_CLAR_ALL(1);

	//_cu_AdF1<1, 100>(0, 0, nullptr, 0, nullptr, 0, nullptr, 0, nullptr, 0);

}


void _cu_add_register_BK()
{
	_cu_materialBack(0, 0, 0, 0, 0, 0, 0);
}


/*


template<int _Id>
inline void _cu_CF2(int s0
	, void* pm0, int m0_s1
	, void* pm1, int m1_s1);
*/
